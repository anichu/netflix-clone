{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLarge","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","console","log","urlParams","URLSearchParams","URL","search","catch","err","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ef468a6.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n});\r\n\r\nexport default instance;\r\n","import axios from './axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\nimport './Row.css';\r\n\r\nconst baseURL = 'https://image.tmdb.org/t/p/original/';\r\n\r\nconst Row = ({ title, fetchUrl, isLarge }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState('');\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    };\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n  const opts = {\r\n    height: '390',\r\n    width: '100%',\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl('');\r\n    } else {\r\n      movieTrailer(movie?.name || '')\r\n        .then((url) => {\r\n          console.log('anis', url);\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get('v'));\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  // console.log(movies);\r\n  return (\r\n    <div className='row'>\r\n      <h2>{title}</h2>\r\n      <div className={`row__posters`}>\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row__poster ${isLarge && 'row__posterLarge'}`}\r\n            src={`https://image.tmdb.org/t/p/original/${\r\n              isLarge ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","const API_KEY = '03a320da9f0dfb1263ae6a87c140f612';\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from './axios';\r\nimport requests from './request';\r\nimport './Banner.css';\r\n\r\nconst Banner = () => {\r\n  const [movie, setMovie] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + '....' : str;\r\n  }\r\n  return (\r\n    <header\r\n      className='banner'\r\n      style={{\r\n        backgroundSize: 'cover',\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: 'center center',\r\n      }}\r\n    >\r\n      <div className='banner__content'>\r\n        <h1 className='banner__title'>\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className='banner__buttons'>\r\n          <button className='banner__button'>Play</button>\r\n          <button className='banner__button'>My List</button>\r\n        </div>\r\n        <div className='banner__description'>\r\n          {truncate(movie?.overview, 150)}\r\n        </div>\r\n      </div>\r\n      <div className='banner--fadeBottom'></div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Nav.css';\r\n\r\nconst Nav = () => {\r\n  const [show, handleShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else {\r\n        handleShow(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll');\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`nav ${show && 'nav__black'}`}>\r\n      <img\r\n        className='nav__logo'\r\n        src='https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/170px-Netflix_2015_logo.svg.png'\r\n        alt='netflix-logo'\r\n      />\r\n\r\n      <img\r\n        className='nav__avatar'\r\n        src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJUpFldpNNY2fcTdUX-U0XKVjFkmDssecSIarNPZ8hRkEIBYmGl-XCTEHo1WdDmaAIE2s&usqp=CAU'\r\n        alt='nav__avatar'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import './App.css';\nimport Row from './Row';\nimport requests from './request';\nimport Banner from './Banner';\nimport Nav from './Nav';\nfunction App() {\n  return (\n    <div className='App'>\n      <Nav />\n      <Banner />\n      <Row\n        isLarge={true}\n        title='NETFLIX ORIGINALS'\n        fetchUrl={requests.fetchNetflixOriginals}\n      />\n      <Row title='Trending Now' fetchUrl={requests.fetchTrending} />\n      <Row title='Top Rated' fetchUrl={requests.fetchTopRated} />\n      <Row title='Romance Movies' fetchUrl={requests.fetchRomanceMovies} />\n      <Row title='Comedy Movies' fetchUrl={requests.fetchComedyMovies} />\n      <Row title='Horror Movies' fetchUrl={requests.fetchHorrorMovies} />\n      <Row title='Actions Movies' fetchUrl={requests.fetchActionMovies} />\n      <Row title='Documentries Movies' fetchUrl={requests.fetchDocumentries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}